/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.tactbug.ddd.common.avro.product;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CategoryCreatedAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8015265937656325447L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CategoryCreatedAvro\",\"namespace\":\"com.tactbug.ddd.common.avro.product\",\"fields\":[{\"name\":\"CategoryCreatedDataAvro\",\"type\":{\"type\":\"record\",\"name\":\"CategoryCreatedDataAvro\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"remark\",\"type\":\"string\"},{\"name\":\"parentId\",\"type\":\"long\"}]}},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"createTime\",\"type\":\"string\"},{\"name\":\"updateTime\",\"type\":\"string\"},{\"name\":\"domainId\",\"type\":\"long\"},{\"name\":\"domainVersion\",\"type\":\"int\"},{\"name\":\"eventType\",\"type\":\"string\"},{\"name\":\"operator\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CategoryCreatedAvro> ENCODER =
      new BinaryMessageEncoder<CategoryCreatedAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CategoryCreatedAvro> DECODER =
      new BinaryMessageDecoder<CategoryCreatedAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CategoryCreatedAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CategoryCreatedAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CategoryCreatedAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CategoryCreatedAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CategoryCreatedAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CategoryCreatedAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CategoryCreatedAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CategoryCreatedAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro CategoryCreatedDataAvro;
  private long id;
  private int version;
  private java.lang.CharSequence createTime;
  private java.lang.CharSequence updateTime;
  private long domainId;
  private int domainVersion;
  private java.lang.CharSequence eventType;
  private long operator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CategoryCreatedAvro() {}

  /**
   * All-args constructor.
   * @param CategoryCreatedDataAvro The new value for CategoryCreatedDataAvro
   * @param id The new value for id
   * @param version The new value for version
   * @param createTime The new value for createTime
   * @param updateTime The new value for updateTime
   * @param domainId The new value for domainId
   * @param domainVersion The new value for domainVersion
   * @param eventType The new value for eventType
   * @param operator The new value for operator
   */
  public CategoryCreatedAvro(com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro CategoryCreatedDataAvro, java.lang.Long id, java.lang.Integer version, java.lang.CharSequence createTime, java.lang.CharSequence updateTime, java.lang.Long domainId, java.lang.Integer domainVersion, java.lang.CharSequence eventType, java.lang.Long operator) {
    this.CategoryCreatedDataAvro = CategoryCreatedDataAvro;
    this.id = id;
    this.version = version;
    this.createTime = createTime;
    this.updateTime = updateTime;
    this.domainId = domainId;
    this.domainVersion = domainVersion;
    this.eventType = eventType;
    this.operator = operator;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return CategoryCreatedDataAvro;
    case 1: return id;
    case 2: return version;
    case 3: return createTime;
    case 4: return updateTime;
    case 5: return domainId;
    case 6: return domainVersion;
    case 7: return eventType;
    case 8: return operator;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: CategoryCreatedDataAvro = (com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro)value$; break;
    case 1: id = (java.lang.Long)value$; break;
    case 2: version = (java.lang.Integer)value$; break;
    case 3: createTime = (java.lang.CharSequence)value$; break;
    case 4: updateTime = (java.lang.CharSequence)value$; break;
    case 5: domainId = (java.lang.Long)value$; break;
    case 6: domainVersion = (java.lang.Integer)value$; break;
    case 7: eventType = (java.lang.CharSequence)value$; break;
    case 8: operator = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'CategoryCreatedDataAvro' field.
   * @return The value of the 'CategoryCreatedDataAvro' field.
   */
  public com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro getCategoryCreatedDataAvro() {
    return CategoryCreatedDataAvro;
  }


  /**
   * Sets the value of the 'CategoryCreatedDataAvro' field.
   * @param value the value to set.
   */
  public void setCategoryCreatedDataAvro(com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro value) {
    this.CategoryCreatedDataAvro = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public int getVersion() {
    return version;
  }


  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(int value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'createTime' field.
   * @return The value of the 'createTime' field.
   */
  public java.lang.CharSequence getCreateTime() {
    return createTime;
  }


  /**
   * Sets the value of the 'createTime' field.
   * @param value the value to set.
   */
  public void setCreateTime(java.lang.CharSequence value) {
    this.createTime = value;
  }

  /**
   * Gets the value of the 'updateTime' field.
   * @return The value of the 'updateTime' field.
   */
  public java.lang.CharSequence getUpdateTime() {
    return updateTime;
  }


  /**
   * Sets the value of the 'updateTime' field.
   * @param value the value to set.
   */
  public void setUpdateTime(java.lang.CharSequence value) {
    this.updateTime = value;
  }

  /**
   * Gets the value of the 'domainId' field.
   * @return The value of the 'domainId' field.
   */
  public long getDomainId() {
    return domainId;
  }


  /**
   * Sets the value of the 'domainId' field.
   * @param value the value to set.
   */
  public void setDomainId(long value) {
    this.domainId = value;
  }

  /**
   * Gets the value of the 'domainVersion' field.
   * @return The value of the 'domainVersion' field.
   */
  public int getDomainVersion() {
    return domainVersion;
  }


  /**
   * Sets the value of the 'domainVersion' field.
   * @param value the value to set.
   */
  public void setDomainVersion(int value) {
    this.domainVersion = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.CharSequence getEventType() {
    return eventType;
  }


  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'operator' field.
   * @return The value of the 'operator' field.
   */
  public long getOperator() {
    return operator;
  }


  /**
   * Sets the value of the 'operator' field.
   * @param value the value to set.
   */
  public void setOperator(long value) {
    this.operator = value;
  }

  /**
   * Creates a new CategoryCreatedAvro RecordBuilder.
   * @return A new CategoryCreatedAvro RecordBuilder
   */
  public static com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder newBuilder() {
    return new com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder();
  }

  /**
   * Creates a new CategoryCreatedAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CategoryCreatedAvro RecordBuilder
   */
  public static com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder newBuilder(com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder other) {
    if (other == null) {
      return new com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder();
    } else {
      return new com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder(other);
    }
  }

  /**
   * Creates a new CategoryCreatedAvro RecordBuilder by copying an existing CategoryCreatedAvro instance.
   * @param other The existing instance to copy.
   * @return A new CategoryCreatedAvro RecordBuilder
   */
  public static com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder newBuilder(com.tactbug.ddd.common.avro.product.CategoryCreatedAvro other) {
    if (other == null) {
      return new com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder();
    } else {
      return new com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for CategoryCreatedAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CategoryCreatedAvro>
    implements org.apache.avro.data.RecordBuilder<CategoryCreatedAvro> {

    private com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro CategoryCreatedDataAvro;
    private com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro.Builder CategoryCreatedDataAvroBuilder;
    private long id;
    private int version;
    private java.lang.CharSequence createTime;
    private java.lang.CharSequence updateTime;
    private long domainId;
    private int domainVersion;
    private java.lang.CharSequence eventType;
    private long operator;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.CategoryCreatedDataAvro)) {
        this.CategoryCreatedDataAvro = data().deepCopy(fields()[0].schema(), other.CategoryCreatedDataAvro);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasCategoryCreatedDataAvroBuilder()) {
        this.CategoryCreatedDataAvroBuilder = com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro.newBuilder(other.getCategoryCreatedDataAvroBuilder());
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.version)) {
        this.version = data().deepCopy(fields()[2].schema(), other.version);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.createTime)) {
        this.createTime = data().deepCopy(fields()[3].schema(), other.createTime);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.updateTime)) {
        this.updateTime = data().deepCopy(fields()[4].schema(), other.updateTime);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.domainId)) {
        this.domainId = data().deepCopy(fields()[5].schema(), other.domainId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.domainVersion)) {
        this.domainVersion = data().deepCopy(fields()[6].schema(), other.domainVersion);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.eventType)) {
        this.eventType = data().deepCopy(fields()[7].schema(), other.eventType);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.operator)) {
        this.operator = data().deepCopy(fields()[8].schema(), other.operator);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing CategoryCreatedAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.tactbug.ddd.common.avro.product.CategoryCreatedAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.CategoryCreatedDataAvro)) {
        this.CategoryCreatedDataAvro = data().deepCopy(fields()[0].schema(), other.CategoryCreatedDataAvro);
        fieldSetFlags()[0] = true;
      }
      this.CategoryCreatedDataAvroBuilder = null;
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.version)) {
        this.version = data().deepCopy(fields()[2].schema(), other.version);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.createTime)) {
        this.createTime = data().deepCopy(fields()[3].schema(), other.createTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.updateTime)) {
        this.updateTime = data().deepCopy(fields()[4].schema(), other.updateTime);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.domainId)) {
        this.domainId = data().deepCopy(fields()[5].schema(), other.domainId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.domainVersion)) {
        this.domainVersion = data().deepCopy(fields()[6].schema(), other.domainVersion);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.eventType)) {
        this.eventType = data().deepCopy(fields()[7].schema(), other.eventType);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.operator)) {
        this.operator = data().deepCopy(fields()[8].schema(), other.operator);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'CategoryCreatedDataAvro' field.
      * @return The value.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro getCategoryCreatedDataAvro() {
      return CategoryCreatedDataAvro;
    }


    /**
      * Sets the value of the 'CategoryCreatedDataAvro' field.
      * @param value The value of 'CategoryCreatedDataAvro'.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder setCategoryCreatedDataAvro(com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro value) {
      validate(fields()[0], value);
      this.CategoryCreatedDataAvroBuilder = null;
      this.CategoryCreatedDataAvro = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'CategoryCreatedDataAvro' field has been set.
      * @return True if the 'CategoryCreatedDataAvro' field has been set, false otherwise.
      */
    public boolean hasCategoryCreatedDataAvro() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'CategoryCreatedDataAvro' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro.Builder getCategoryCreatedDataAvroBuilder() {
      if (CategoryCreatedDataAvroBuilder == null) {
        if (hasCategoryCreatedDataAvro()) {
          setCategoryCreatedDataAvroBuilder(com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro.newBuilder(CategoryCreatedDataAvro));
        } else {
          setCategoryCreatedDataAvroBuilder(com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro.newBuilder());
        }
      }
      return CategoryCreatedDataAvroBuilder;
    }

    /**
     * Sets the Builder instance for the 'CategoryCreatedDataAvro' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder setCategoryCreatedDataAvroBuilder(com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro.Builder value) {
      clearCategoryCreatedDataAvro();
      CategoryCreatedDataAvroBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'CategoryCreatedDataAvro' field has an active Builder instance
     * @return True if the 'CategoryCreatedDataAvro' field has an active Builder instance
     */
    public boolean hasCategoryCreatedDataAvroBuilder() {
      return CategoryCreatedDataAvroBuilder != null;
    }

    /**
      * Clears the value of the 'CategoryCreatedDataAvro' field.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder clearCategoryCreatedDataAvro() {
      CategoryCreatedDataAvro = null;
      CategoryCreatedDataAvroBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder setId(long value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder clearId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public int getVersion() {
      return version;
    }


    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder setVersion(int value) {
      validate(fields()[2], value);
      this.version = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder clearVersion() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'createTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreateTime() {
      return createTime;
    }


    /**
      * Sets the value of the 'createTime' field.
      * @param value The value of 'createTime'.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder setCreateTime(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.createTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'createTime' field has been set.
      * @return True if the 'createTime' field has been set, false otherwise.
      */
    public boolean hasCreateTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'createTime' field.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder clearCreateTime() {
      createTime = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'updateTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getUpdateTime() {
      return updateTime;
    }


    /**
      * Sets the value of the 'updateTime' field.
      * @param value The value of 'updateTime'.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder setUpdateTime(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.updateTime = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'updateTime' field has been set.
      * @return True if the 'updateTime' field has been set, false otherwise.
      */
    public boolean hasUpdateTime() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'updateTime' field.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder clearUpdateTime() {
      updateTime = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'domainId' field.
      * @return The value.
      */
    public long getDomainId() {
      return domainId;
    }


    /**
      * Sets the value of the 'domainId' field.
      * @param value The value of 'domainId'.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder setDomainId(long value) {
      validate(fields()[5], value);
      this.domainId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'domainId' field has been set.
      * @return True if the 'domainId' field has been set, false otherwise.
      */
    public boolean hasDomainId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'domainId' field.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder clearDomainId() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'domainVersion' field.
      * @return The value.
      */
    public int getDomainVersion() {
      return domainVersion;
    }


    /**
      * Sets the value of the 'domainVersion' field.
      * @param value The value of 'domainVersion'.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder setDomainVersion(int value) {
      validate(fields()[6], value);
      this.domainVersion = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'domainVersion' field has been set.
      * @return True if the 'domainVersion' field has been set, false otherwise.
      */
    public boolean hasDomainVersion() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'domainVersion' field.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder clearDomainVersion() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventType() {
      return eventType;
    }


    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.eventType = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'operator' field.
      * @return The value.
      */
    public long getOperator() {
      return operator;
    }


    /**
      * Sets the value of the 'operator' field.
      * @param value The value of 'operator'.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder setOperator(long value) {
      validate(fields()[8], value);
      this.operator = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'operator' field has been set.
      * @return True if the 'operator' field has been set, false otherwise.
      */
    public boolean hasOperator() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'operator' field.
      * @return This builder.
      */
    public com.tactbug.ddd.common.avro.product.CategoryCreatedAvro.Builder clearOperator() {
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CategoryCreatedAvro build() {
      try {
        CategoryCreatedAvro record = new CategoryCreatedAvro();
        if (CategoryCreatedDataAvroBuilder != null) {
          try {
            record.CategoryCreatedDataAvro = this.CategoryCreatedDataAvroBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("CategoryCreatedDataAvro"));
            throw e;
          }
        } else {
          record.CategoryCreatedDataAvro = fieldSetFlags()[0] ? this.CategoryCreatedDataAvro : (com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro) defaultValue(fields()[0]);
        }
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.Long) defaultValue(fields()[1]);
        record.version = fieldSetFlags()[2] ? this.version : (java.lang.Integer) defaultValue(fields()[2]);
        record.createTime = fieldSetFlags()[3] ? this.createTime : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.updateTime = fieldSetFlags()[4] ? this.updateTime : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.domainId = fieldSetFlags()[5] ? this.domainId : (java.lang.Long) defaultValue(fields()[5]);
        record.domainVersion = fieldSetFlags()[6] ? this.domainVersion : (java.lang.Integer) defaultValue(fields()[6]);
        record.eventType = fieldSetFlags()[7] ? this.eventType : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.operator = fieldSetFlags()[8] ? this.operator : (java.lang.Long) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CategoryCreatedAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<CategoryCreatedAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CategoryCreatedAvro>
    READER$ = (org.apache.avro.io.DatumReader<CategoryCreatedAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.CategoryCreatedDataAvro.customEncode(out);

    out.writeLong(this.id);

    out.writeInt(this.version);

    out.writeString(this.createTime);

    out.writeString(this.updateTime);

    out.writeLong(this.domainId);

    out.writeInt(this.domainVersion);

    out.writeString(this.eventType);

    out.writeLong(this.operator);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.CategoryCreatedDataAvro == null) {
        this.CategoryCreatedDataAvro = new com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro();
      }
      this.CategoryCreatedDataAvro.customDecode(in);

      this.id = in.readLong();

      this.version = in.readInt();

      this.createTime = in.readString(this.createTime instanceof Utf8 ? (Utf8)this.createTime : null);

      this.updateTime = in.readString(this.updateTime instanceof Utf8 ? (Utf8)this.updateTime : null);

      this.domainId = in.readLong();

      this.domainVersion = in.readInt();

      this.eventType = in.readString(this.eventType instanceof Utf8 ? (Utf8)this.eventType : null);

      this.operator = in.readLong();

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.CategoryCreatedDataAvro == null) {
            this.CategoryCreatedDataAvro = new com.tactbug.ddd.common.avro.product.CategoryCreatedDataAvro();
          }
          this.CategoryCreatedDataAvro.customDecode(in);
          break;

        case 1:
          this.id = in.readLong();
          break;

        case 2:
          this.version = in.readInt();
          break;

        case 3:
          this.createTime = in.readString(this.createTime instanceof Utf8 ? (Utf8)this.createTime : null);
          break;

        case 4:
          this.updateTime = in.readString(this.updateTime instanceof Utf8 ? (Utf8)this.updateTime : null);
          break;

        case 5:
          this.domainId = in.readLong();
          break;

        case 6:
          this.domainVersion = in.readInt();
          break;

        case 7:
          this.eventType = in.readString(this.eventType instanceof Utf8 ? (Utf8)this.eventType : null);
          break;

        case 8:
          this.operator = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










